#!/bin/sh /etc/rc.common

. /lib/netifd/netifd-proto.sh

START=99
STOP=10

USE_PROCD=1

is_available() {
	local device="$1"
	local available

	json_init
	json_load "$(ifstatus $device)"
	json_get_var available available
	echo "$available"
}

needs_up() {
	local device="$1"
	local result="0"
	local keys val up

	[ -n "$addresses" ] && {
		json_init
		json_load "{\"addresses\":$(ip -json address list dev "$device" 2>/dev/null)}"
		json_select addresses
		json_select 1
		if json_is_a flags array; then
			json_select flags
			json_get_keys keys
			for key in $keys; do
				json_get_var val "$key"
				[ "$val" = "UP" ] && result="1"
			done
		fi
	}

	[ "$result" -eq 1 ] && {
		json_init
		json_load "$(ifstatus $device)"
		json_get_var up up
		[ "$up" -eq 1 ] && result="0"
	}

	echo "$result"
}

needs_down() {
	local device="$1"
	local up

	json_init
	json_load "$(ifstatus $device)"
	json_get_var up up
	echo "$up"
}

service_triggers() {
	procd_add_interface_trigger "interface.*" "wan" /etc/init.d/netbird restart
}

start_service() {
	local device

	procd_open_instance
	procd_set_param command /usr/bin/netbird
	procd_append_param command service run
	procd_set_param pidfile /var/run/netbird.pid
	procd_close_instance

	uci show network | grep proto | grep netbird | while read -r line; do
		device="$(echo "$line" | cut -d '.' -f2)"
		[ "$(is_available "$device")" -eq 0 ] && {
			proto_set_available "$device" 1
			sleep 1
		}
		[ "$(needs_up "$device")" -eq 0 ] && ifup "$device"
	done
}

stop_service() {

	uci show network | grep proto | grep netbird | while read -r line; do
		device="$(echo "$line" | cut -d '.' -f2)"
		[ "$(needs_down "$device")" -eq 1 ] && ifdown "$device"
	done
}
