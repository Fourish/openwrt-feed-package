#!/bin/sh /etc/rc.common
# Copyright (C) 2016 OpenWrt.org

START=98
STOP=20
PROG=/usr/bin/knxd
USE_PROCD=1
INI="/tmp/etc/knxd.ini"

add_sec(){
	local name=$(echo "$1" | tr "_" "-")
	echo "[$name]" >> $INI
}
add_str(){
	local cfg=$1
	local name=$2
	local rename=$(echo "$name" | tr "_" "-")
	config_get value $cfg $name
	[ -z "$value" ] || echo "$rename = $value" >> $INI
}
add_bool(){
	local cfg=$1
	local name=$2
	local rename=$(echo "$name" | tr "_" "-")
	config_get value $cfg $name
	[ "$value" == "0" ] && echo "$rename = false" >> $INI
	[ "$value" == "1" ] && echo "$rename = true" >> $INI
}

add_driver() {
	local cfg=$1
	config_get socktype $cfg socktype
	[ -z "$socktype" ] && return 0
	add_sec "$cfg.$socktype"
	#Drivers
	add_str $cfg driver
	#Common options
	add_bool $cfg ignore
	add_bool $cfg may_fail
	add_str $cfg retry_delay
	add_str $cfg max_retry
	add_str $cfg send_timeout
	add_str $cfg debug
	#ip
	add_str $cfg multicast_address
	add_str $cfg port
	#ip #usb
	add_str $cfg interface
	#ipt #iptn #tpuarttcp #ncn5120tcp #ft12tcp #ft12cemitcp
	add_str $cfg ip_address
	add_str $cfg dest_port 
	#ipt #iptn
	add_str $cfg src_port
	add_bool $cfg nat
	add_str $cfg heartbeat_timer
	add_str $cfg heartbeat_retries
	add_str $cfg nat_ip
	add_str $cfg data_port
	#usb
	add_str $cfg bus
	#usb #tpuart(s) #ncn5120
	add_str $cfg device
	#usb
	add_str $cfg config
	add_str $cfg setting
	add_str $cfg version
	#usb
	add_str $cfg bus
	#usb #tpuart(s) #ncn5120
	add_str $cfg device
	#usb
	add_str $cfg config
	add_str $cfg setting
	add_str $cfg version
	#usb
	add_str $cfg send_retries
	#tpuart(s) #ncn5120 #ft12 #ft12cemi
	add_str $cfg baudrate
	#More common options
	add_bool $cfg ack_group
	add_bool $cfg ack_individual
	add_bool $cfg reset
	add_bool $cfg monitor
}

add_server() {
	local cfg=$1
	config_get socktype $cfg socktype
	[ -z "$socktype" ] && return 0
	add_sec "$cfg.$socktype"
	#Server
	add_str $cfg server	
	#Common options
	add_bool $cfg ignore
	add_bool $cfg may_fail
	add_str $cfg retry_delay
	add_str $cfg max_retry
	add_str $cfg send_timeout
	add_str $cfg debug
	#ets_router
	add_str $cfg multicast_address
	#knxd_tcp #ets_router
	add_str $cfg port
	#knxd_tcp #ets_router
	add_str $cfg interface
	#knxd_tcp
	add_str $cfg ip_address
	#ets_router
	add_str $cfg tunnel
	add_str $cfg router
	add_bool $cfg discover
	add_bool $cfg multi_port
	add_str $cfg name
	#knxd_unix
	add_str $cfg path
	#knxd_unix #knxd_tcp
	add_bool $cfg systemd_ignore

}

add_dbg() {
	local cfg=$1
	config_get socktype $cfg socktype
	[ -z "$socktype" ] && return 0
	add_sec "$cfg.$socktype"
	add_str $cfg error_level
	add_str $cfg trace_mask
	add_bool $cfg timestamps
}

add_main() {
	local cfg=$1
	echo "[main]" >> $INI
	add_bool $cfg background
	add_str $cfg addr
	add_str $cfg client_addrs
	add_str $cfg connections
	add_str $cfg logfile
	add_str $cfg name
	add_str $cfg cache
	add_str $cfg force_broadcast
	add_str $cfg debug
}

start_service() {
	>$INI
	config_load knxd
	config_foreach add_driver driver
	config_foreach add_server server
	config_foreach add_dbg debug
	config_foreach add_main main
	procd_open_instance
	procd_set_param command $PROG $INI
	procd_set_param respawn
	procd_close_instance
}
stop_service() {
	killall knxd
}

reload_service()
{
	restart
}

service_triggers()
{
	procd_add_reload_trigger knxd
}
