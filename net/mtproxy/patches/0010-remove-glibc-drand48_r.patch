From d74822b4ab1c9223dfeda95bf983ebadac5557ec Mon Sep 17 00:00:00 2001
From: yangfl <yangfl@users.noreply.github.com>
Date: Sun, 12 May 2019 11:52:56 +0800
Subject: [PATCH 10/19] remove glibc drand48_r

---
 jobs/jobs.c | 11 +++++++----
 jobs/jobs.h |  2 +-
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/jobs/jobs.c b/jobs/jobs.c
index 68b7d53..a25a5b5 100644
--- a/jobs/jobs.c
+++ b/jobs/jobs.c
@@ -371,7 +371,7 @@ __thread job_t this_job;
 long int lrand48_j (void) {
   if (this_job_thread) {
     long int t;
-    lrand48_r (&this_job_thread->rand_data, &t);
+    t = nrand48 (this_job_thread->rand_data);
     return t;
   } else {
     return lrand48 ();
@@ -381,7 +381,7 @@ long int lrand48_j (void) {
 long int mrand48_j (void) {
   if (this_job_thread) {
     long int t;
-    mrand48_r (&this_job_thread->rand_data, &t);
+    t = jrand48 (this_job_thread->rand_data);
     return t;
   } else {
     return mrand48 ();
@@ -391,7 +391,7 @@ long int mrand48_j (void) {
 double drand48_j (void) {
   if (this_job_thread) {
     double t;
-    drand48_r (&this_job_thread->rand_data, &t);
+    t = erand48 (this_job_thread->rand_data);
     return t;
   } else {
     return drand48 ();
@@ -463,7 +463,10 @@ int create_job_thread_ex (int thread_class, void *(*thread_work)(void *)) {
   JT->id = i;
   assert (JT->job_queue);
 
-  srand48_r (rdtsc () ^ lrand48 (), &JT->rand_data);
+  long int rand_seed = rdtsc () ^ lrand48 ();
+  JT->rand_data[0] = 0x330E;
+  JT->rand_data[1] = rand_seed & 0xffff;
+  JT->rand_data[2] = (rand_seed >> 16) & 0xffff;
 
 
   if (thread_class != JC_MAIN) {
diff --git a/jobs/jobs.h b/jobs/jobs.h
index 3e49b71..e867e74 100644
--- a/jobs/jobs.h
+++ b/jobs/jobs.h
@@ -232,7 +232,7 @@ struct job_thread {
   long long jobs_created;
   long long jobs_active;
   int thread_system_id;
-  struct drand48_data rand_data;
+  unsigned short rand_data[3];
   job_t timer_manager;
   double wakeup_time;
   struct job_class *job_class;
-- 
2.20.1

