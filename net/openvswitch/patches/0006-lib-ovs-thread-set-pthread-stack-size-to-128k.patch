From 83a730ee05ce69828dc9c862d48aa2d7e86d4fc5 Mon Sep 17 00:00:00 2001
From: Alexandru Ardelean <ardeleanalex@gmail.com>
Date: Sun, 24 Jan 2016 11:12:20 +0200
Subject: [PATCH][RFC] lib/ovs-thread: set pthread stack size to 128k

Seems that musl libc's default thread stack size is 80k, which
causes a segfault (stack overflow actually) when trying to add
a bridge (via the "ovs-vsctl add-br" command).

OpenWRT has been switching to musl libc for a few months now.
So far, we've been using OVS with uClibc, so I did not catch this
earlier.

This patch is a RFC:
- is this thread stack size sufficient ?
- is this approach acceptable ?

In OpenWRT we'll use this patch since it works.

Issue was found and fixed by Robert McKay.
I fine tuned his patch and will add it to our OVS package
in OpenWRT.

Thanks to Russell for the pthread_attr_destroy() hint.

Reviewed-by: Russell Bryant <russell@ovn.org>
Signed-off-by: Robert McKay <robert@mckay.com>
Signed-off-by: Alexandru Ardelean <ardeleanalex@gmail.com>
---
 lib/ovs-thread.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/lib/ovs-thread.c b/lib/ovs-thread.c
index 7855b3a..31255d3 100644
--- a/lib/ovs-thread.c
+++ b/lib/ovs-thread.c
@@ -347,6 +347,7 @@ ovs_thread_create(const char *name, void *(*start)(void *), void *arg)
 {
     struct ovsthread_aux *aux;
     pthread_t thread;
+    pthread_attr_t attr;
     int error;
 
     forbid_forking("multiple threads exist");
@@ -358,10 +359,13 @@ ovs_thread_create(const char *name, void *(*start)(void *), void *arg)
     aux->arg = arg;
     ovs_strlcpy(aux->name, name, sizeof aux->name);
 
-    error = pthread_create(&thread, NULL, ovsthread_wrapper, aux);
+    pthread_attr_init(&attr);
+    pthread_attr_setstacksize(&attr, 128*1024);
+    error = pthread_create(&thread, &attr, ovsthread_wrapper, aux);
     if (error) {
         ovs_abort(error, "pthread_create failed");
     }
+    pthread_attr_destroy(&attr);
     return thread;
 }
 
-- 
2.1.4

