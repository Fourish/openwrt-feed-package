From 75a6f0106ff0e8975ef27aad800c91ce6dcc2614 Mon Sep 17 00:00:00 2001
From: Xiaobo Tian <peterwillcn@gmail.com>
Date: Tue, 21 Apr 2020 20:55:12 +0800
Subject: [PATCH] openssl-deprecated

Signed-off-by: Xiaobo Tian <peterwillcn@gmail.com>
---
 lib/crypto/c_src/crypto.c          | 12 ++++++++++++
 lib/crypto/c_src/crypto_callback.c | 16 ++++++++++++++--
 lib/crypto/c_src/crypto_callback.h |  6 ++++++
 lib/crypto/c_src/otp_test_engine.c |  2 ++
 4 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/lib/crypto/c_src/crypto.c b/lib/crypto/c_src/crypto.c
index c968cec6b5..7e2aed952d 100644
--- a/lib/crypto/c_src/crypto.c
+++ b/lib/crypto/c_src/crypto.c
@@ -130,7 +130,11 @@ ERL_NIF_INIT(crypto,nif_funcs,load,NULL,upgrade,unload)
 
 static int verify_lib_version(void)
 {
+  #if OPENSSL_VERSION_NUMBER < PACKED_OPENSSL_VERSION_PLAIN(1,1,0)
     const unsigned long libv = SSLeay();
+  #else
+    const unsigned long libv = OpenSSL_version_num();
+  #endif
     const unsigned long hdrv = OPENSSL_VERSION_NUMBER;
 
 #   define MAJOR_VER(V) ((unsigned long)(V) >> (7*4))
@@ -217,12 +221,14 @@ static int initialize(ErlNifEnv* env, ERL_NIF_TERM load_info)
     funcp = &get_crypto_callbacks;
 #endif
 
+#if OPENSSL_VERSION_NUMBER < PACKED_OPENSSL_VERSION_PLAIN(1,1,0)
 #ifdef OPENSSL_THREADS
     enif_system_info(&sys_info, sizeof(sys_info));
     if (sys_info.scheduler_threads > 1) {
 	nlocks = CRYPTO_num_locks();
     }
     /* else no need for locks */
+#endif
 #endif
 
     ccb = (*funcp)(nlocks);
@@ -237,15 +243,21 @@ static int initialize(ErlNifEnv* env, ERL_NIF_TERM load_info)
         return __LINE__;
 #endif
 
+#if OPENSSL_VERSION_NUMBER < PACKED_OPENSSL_VERSION_PLAIN(1,1,0)
 #ifdef OPENSSL_THREADS
     if (nlocks > 0) {
 	CRYPTO_set_locking_callback(ccb->locking_function);
+#if OPENSSL_VERSION_NUMBER < 0x10000000
 	CRYPTO_set_id_callback(ccb->id_function);
+#else
+  CRYPTO_THREADID_set_callback(ccb->id_function);
+#endif
 	CRYPTO_set_dynlock_create_callback(ccb->dyn_create_function);
 	CRYPTO_set_dynlock_lock_callback(ccb->dyn_lock_function);
 	CRYPTO_set_dynlock_destroy_callback(ccb->dyn_destroy_function);
     }
 #endif /* OPENSSL_THREADS */
+#endif
 
     init_digest_types(env);
     init_mac_types(env);
diff --git a/lib/crypto/c_src/crypto_callback.c b/lib/crypto/c_src/crypto_callback.c
index 3a47b3b060..a81a56a31f 100644
--- a/lib/crypto/c_src/crypto_callback.c
+++ b/lib/crypto/c_src/crypto_callback.c
@@ -98,7 +98,7 @@ static void crypto_free(void* ptr CCB_FILE_LINE_ARGS)
     enif_free(ptr);
 }
 
-
+#if OPENSSL_VERSION_NUMBER < 0x10100000
 #ifdef OPENSSL_THREADS /* vvvvvvvvvvvvvvv OPENSSL_THREADS vvvvvvvvvvvvvvvv */
 
 static ErlNifRWLock** lock_vec = NULL; /* Static locks used by openssl */
@@ -130,10 +130,17 @@ static void locking_function(int mode, int n, const char *file, int line)
     locking(mode, lock_vec[n]);
 }
 
+#if OPENSSL_VERSION_NUMBER < 0x10000000
 static unsigned long id_function(void)
 {
     return (unsigned long) enif_thread_self();
 }
+#else
+static void id_function(CRYPTO_THREADID *id)
+{
+    CRYPTO_THREADID_set_numeric(id, (unsigned long) enif_thread_self());
+}
+#endif
 
 /* Dynamic locking, not used by current openssl version (0.9.8)
  */
@@ -151,6 +158,7 @@ static void dyn_destroy_function(struct CRYPTO_dynlock_value *ptr, const char *f
 }
 
 #endif /* ^^^^^^^^^^^^^^^^^^^^^^ OPENSSL_THREADS ^^^^^^^^^^^^^^^^^^^^^^ */
+#endif
 
 DLLEXPORT struct crypto_callbacks* get_crypto_callbacks(int nlocks)
 {
@@ -161,7 +169,8 @@ DLLEXPORT struct crypto_callbacks* get_crypto_callbacks(int nlocks)
 	&crypto_alloc,
 	&crypto_realloc,
 	&crypto_free,
-        
+
+#if OPENSSL_VERSION_NUMBER < 0x10100000
 #ifdef OPENSSL_THREADS
 	&locking_function,
 	&id_function,
@@ -169,9 +178,11 @@ DLLEXPORT struct crypto_callbacks* get_crypto_callbacks(int nlocks)
 	&dyn_lock_function,
 	&dyn_destroy_function
 #endif /* OPENSSL_THREADS */
+#endif
     };
 
     if (!is_initialized) {
+#if OPENSSL_VERSION_NUMBER < 0x10100000
 #ifdef OPENSSL_THREADS
 	if (nlocks > 0) {
 	    int i;
@@ -188,6 +199,7 @@ DLLEXPORT struct crypto_callbacks* get_crypto_callbacks(int nlocks)
                     goto err;
 	    }
 	}
+#endif
 #endif
 	is_initialized = 1;
     }
diff --git a/lib/crypto/c_src/crypto_callback.h b/lib/crypto/c_src/crypto_callback.h
index d46266fd8b..91f3907717 100644
--- a/lib/crypto/c_src/crypto_callback.h
+++ b/lib/crypto/c_src/crypto_callback.h
@@ -34,9 +34,15 @@ struct crypto_callbacks
     void (*crypto_free)(void* ptr CCB_FILE_LINE_ARGS);
 
     /* openssl callbacks */
+#if OPENSSL_VERSION_NUMBER < 0x10100000
   #ifdef OPENSSL_THREADS
     void (*locking_function)(int mode, int n, const char *file, int line);
+  #if OPENSSL_VERSION_NUMBER < 0x10000000
     unsigned long (*id_function)(void);
+  #else
+    void (*id_function)(CRYPTO_THREADID *id);
+  #endif
+#endif
     struct CRYPTO_dynlock_value* (*dyn_create_function)(const char *file,
 							int line);
     void (*dyn_lock_function)(int mode, struct CRYPTO_dynlock_value* ptr,
diff --git a/lib/crypto/c_src/otp_test_engine.c b/lib/crypto/c_src/otp_test_engine.c
index 0d887a16e2..4963ee5f0b 100644
--- a/lib/crypto/c_src/otp_test_engine.c
+++ b/lib/crypto/c_src/otp_test_engine.c
@@ -50,8 +50,10 @@
 	&& !defined(OPENSSL_NO_EC) \
 	&& !defined(OPENSSL_NO_ECDH) \
 	&& !defined(OPENSSL_NO_ECDSA)
+#if !defined(OPENSSL_NO_ENGINE)
 # define HAVE_EC
 #endif
+#endif
 
 #if defined(HAVE_EC)
 /* If OPENSSL_NO_EC is set, there will be an error in ec.h included from engine.h
-- 
2.26.1

