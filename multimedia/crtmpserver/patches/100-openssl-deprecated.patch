--- a/sources/common/include/utils/misc/libcrypto-compat.h
+++ b/sources/common/include/utils/misc/libcrypto-compat.h
@@ -4,6 +4,7 @@
 #include <openssl/opensslv.h>
 #if OPENSSL_VERSION_NUMBER < 0x10100000L
 
+#include <openssl/bn.h>
 #include <openssl/dh.h>
 #include <openssl/evp.h>
 #include <openssl/hmac.h>
--- a/sources/common/src/utils/misc/crypto.cpp
+++ b/sources/common/src/utils/misc/crypto.cpp
@@ -350,11 +350,13 @@ string unhex(string source) {
 	return result;
 }
 
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 void CleanupSSL() {
-	ERR_remove_state(0);
+	ERR_remove_thread_state(NULL);
 	ENGINE_cleanup();
 	CONF_modules_unload(1);
 	ERR_free_strings();
 	EVP_cleanup();
 	CRYPTO_cleanup_all_ex_data();
 }
+#endif
--- a/sources/crtmpserver/src/crtmpserver.cpp
+++ b/sources/crtmpserver/src/crtmpserver.cpp
@@ -298,8 +298,10 @@ void Cleanup() {
 	delete gRs.pConfigFile;
 	gRs.pConfigFile = NULL;
 
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	WARN("Doing final OpenSSL cleanup");
 	CleanupSSL();
+#endif
 
 	WARN("Shutting down the logger leaving you in the dark. Bye bye... :(");
 	Logger::Free(true);
--- a/sources/thelib/src/protocols/ssl/basesslprotocol.cpp
+++ b/sources/thelib/src/protocols/ssl/basesslprotocol.cpp
@@ -43,6 +43,7 @@ BaseSSLProtocol::~BaseSSLProtocol() {
 bool BaseSSLProtocol::Initialize(Variant &parameters) {
 	//1. Initialize the SSL library
 	if (!_libraryInitialized) {
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 		//3. This is the first time we use the library. So we have to
 		//initialize it first
 		SSL_library_init();
@@ -55,6 +56,7 @@ bool BaseSSLProtocol::Initialize(Variant &parameters) {
 		OpenSSL_add_all_algorithms();
 		OpenSSL_add_all_ciphers();
 		OpenSSL_add_all_digests();
+#endif
 
 		//initialize the random numbers generator
 		InitRandGenerator();
