#!/bin/sh /etc/rc.common

. /lib/functions.sh

START=99
STOP=00

run_command() {
	local command="$1"
	$command
}

start_container() {
	local cfg="$1"
	local name

	config_get name "$cfg" name
	config_list_foreach "$cfg" command run_command
	if [ -n "$name" ]; then
		/usr/bin/lxc-start -n "$name"
	fi
}

max_timeout=0

check_running() {
	local cfg="$1"
	local name timeout ret

	config_get name "$cfg" name
	config_get timeout "$cfg" timeout 300

	ret=0

	if [ -n "$name" ]; then
		/usr/bin/lxc-stop -n "$name" -W --nolock
		ret=$?
	fi

	if [ "$max_timeout" -lt "$timeout" ]; then
		if [ "$ret" = "0" ]; then
			max_timeout=$timeout
		fi
	fi

	return $ret
}

stop_container() {
	local cfg="$1"

	local name timeout ret

	config_get name "$cfg" name
	config_get timeout "$cfg" timeout 300

	if [ -n "$name" ]; then
		if [ "$timeout" -lt 1 ]; then
			/usr/bin/lxc-stop -n "$name" -k
		else
			/usr/bin/lxc-stop -n "$name" -t "$timeout" &
		fi
	fi
}

start() {
	config_load lxc-auto
	config_foreach start_container container
}

stop() {
	config_load lxc-auto
	config_foreach stop_container container
	# ensure e.g. shutdown doesn't occur before maximum timeout on
	# containers that are shutting down
	if [ $max_timeout -gt 0 ]; then
		local curtime=0
		while [ $curtime -lt $max_timeout ]; do
			if check_running >/dev/null 2>&1; then
				sleep 5
			fi
			curtime=$((curtime + 1))
		done
	fi
}

